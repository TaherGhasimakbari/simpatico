/*
* Simpatico - Simulation Package for Polymeric and Molecular Liquids
*
* Copyright 2010 - 2014, The Regents of the University of Minnesota
* Distributed under the terms of the GNU General Public License.
*/

#include "ModifierFactory.h" // Class header

// Modifiers 
#include "StrainModulator.h"
#include "Ramper.h"

namespace DdMd
{

   using namespace Util;

   /*
   * Constructor.
   */
   ModifierFactory::ModifierFactory()
    : simulationPtr_(0)
   {}

   /*
   * Constructor.
   */
   ModifierFactory::ModifierFactory(Simulation& simulation)
    : simulationPtr_(&simulation)
   {}

   /* 
   * Return a pointer to an instance of Modifier subclass className.
   */
   Modifier* ModifierFactory::factory(const std::string &className) const
   {
      Modifier* ptr = 0;

      // Try subfactories first (if any)
      ptr = trySubfactories(className);
      if (ptr) return ptr;

      // Simulation Modifiers
      if (className == "StrainModulator") {
         ptr = new StrainModulator(simulation());
      } else 
      if (className == "Ramper") {
         ptr = new Ramper(simulation());
      } // else 

      return ptr;
   }

}
